// <auto-generated />
using System;
using BoxApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoxApi.Migrations
{
    [DbContext(typeof(ContextApi))]
    partial class ContextApiModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BoxApi.Models.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Hauteur")
                        .HasColumnType("float");

                    b.Property<double>("Largeur")
                        .HasColumnType("float");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Profendeur")
                        .HasColumnType("float");

                    b.Property<double>("Superficie")
                        .HasColumnType("float");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Boxs");
                });

            modelBuilder.Entity("BoxApi.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BoxApi.Models.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoxId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("BoxApi.Models.OStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Hauteur")
                        .HasColumnType("float");

                    b.Property<double>("Largeur")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Profendeur")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("OStock");
                });

            modelBuilder.Entity("CategorieOStock", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("OStocksId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "OStocksId");

                    b.HasIndex("OStocksId");

                    b.ToTable("CategorieOStock");
                });

            modelBuilder.Entity("CommandeOStock", b =>
                {
                    b.Property<int>("CommandesId")
                        .HasColumnType("int");

                    b.Property<int>("OStocksId")
                        .HasColumnType("int");

                    b.HasKey("CommandesId", "OStocksId");

                    b.HasIndex("OStocksId");

                    b.ToTable("CommandeOStock");
                });

            modelBuilder.Entity("BoxApi.Models.Commande", b =>
                {
                    b.HasOne("BoxApi.Models.Box", "Box")
                        .WithMany()
                        .HasForeignKey("BoxId");

                    b.Navigation("Box");
                });

            modelBuilder.Entity("CategorieOStock", b =>
                {
                    b.HasOne("BoxApi.Models.Categorie", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoxApi.Models.OStock", null)
                        .WithMany()
                        .HasForeignKey("OStocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommandeOStock", b =>
                {
                    b.HasOne("BoxApi.Models.Commande", null)
                        .WithMany()
                        .HasForeignKey("CommandesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoxApi.Models.OStock", null)
                        .WithMany()
                        .HasForeignKey("OStocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
